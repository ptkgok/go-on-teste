generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = "postgres://dfphtuoerrnjds:d2d2175b2f3da24f6f7fc69124c1d58e366877e7d3f85c36b1abb5b138c51c0d@ec2-44-196-223-128.compute-1.amazonaws.com:5432/da045fjum0tvjt"
  shadowDatabaseUrl = "postgres://eunndnbsvnxjfn:5bd08d21c7f409ae5205adf8b760e09e0d850d0a556eea6e3ecff8337504dcea@ec2-44-196-44-90.compute-1.amazonaws.com:5432/d8ska26p4sg4lb"
}

model Vacation {
  id        Int      @id @default(autoincrement())
  goker     Goker[]
  startDate DateTime
  endDate   DateTime
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  notifications Notification[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  email       String
  category    String
  logo        String
  description String
  createdAt   DateTime @default(now())
  active      Boolean
  Goker       Goker[]  @relation(references: [id])
}

model Goker {
  id          String     @id @default(cuid())
  name        String
  email       String
  password    String
  picture     String?
  workForm    String
  description String?
  office      String
  conquests   Conquest[]
  jobs        Project[]
  active      Boolean    @default(true)
  state       String?
  city        String?
  country     String?
  birthDate   DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  Vacation    Vacation?  @relation(fields: [vacationId], references: [id])
  vacationId  Int?
}

model Conquest {
  id     String  @id @default(cuid())
  title  String
  stamp  String
  Gokers Goker[] @relation(references: [id])
}
